head	1.19;
access;
symbols;
locks;
comment	@// @;


1.19
date	2021.05.01.01.31.01;	author -;	state -;
branches;
next	1.18;

1.18
date	2021.05.01.01.28.46;	author -;	state -;
branches;
next	1.17;

1.17
date	2021.05.01.01.28.29;	author -;	state -;
branches;
next	1.16;

1.16
date	2021.05.01.01.28.15;	author -;	state -;
branches;
next	1.15;

1.15
date	2021.04.30.05.00.15;	author -;	state -;
branches;
next	1.14;

1.14
date	2021.04.30.04.59.08;	author -;	state -;
branches;
next	1.13;

1.13
date	2021.04.30.04.58.30;	author -;	state -;
branches;
next	1.12;

1.12
date	2021.04.30.04.57.30;	author -;	state -;
branches;
next	1.11;

1.11
date	2021.04.30.04.55.55;	author -;	state -;
branches;
next	1.10;

1.10
date	2021.04.30.04.55.37;	author -;	state -;
branches;
next	1.9;

1.9
date	2021.04.30.04.54.48;	author -;	state -;
branches;
next	1.8;

1.8
date	2021.04.30.04.53.44;	author -;	state -;
branches;
next	1.7;

1.7
date	2021.04.30.04.39.52;	author -;	state -;
branches;
next	1.6;

1.6
date	2021.04.30.04.39.01;	author -;	state -;
branches;
next	1.5;

1.5
date	2021.04.30.04.38.40;	author -;	state -;
branches;
next	1.4;

1.4
date	2021.04.30.04.38.31;	author -;	state -;
branches;
next	1.3;

1.3
date	2021.04.30.04.37.09;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.04.30.04.36.51;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.04.30.04.36.30;	author -;	state -;
branches;
next	;


desc
@@


1.19
log
@-
@
text
@// $Id: list-cycle.cpp,v 1.18 2021-04-30 18:28:46-07 - - $

#include <iomanip>
#include <iostream>
#include <list>
using namespace std;

int main() {
   list<int> intlist = {11, 22, 33, 44, 55};
   const size_t max_loops = intlist.size() * 4;
   cout << "sizeof (int) = " << sizeof (int) << endl;
   cout << "sizeof (uintptr_t) = " << sizeof (uintptr_t) << endl;
   cout << "sizeof (list<int>) = " << sizeof (list<int>) << endl;
   cout << "sizeof (list<int>::iterator) = "
        << sizeof (list<int>::iterator) << endl;
   cout << endl;
   cout << "&intlist = " << &intlist << endl;
   cout << "&*intlist.begin() = " << &*intlist.begin() << endl;
   cout << "&*intlist.end() = " << &*intlist.end() << endl;
   cout << endl;
   list<int>::iterator  itor = intlist.begin();
   for (size_t count = 0; count < max_loops; ++count, ++itor) {
      cout << setw (2) << count << ": &*itor = " << &*itor
           << " -> " << *itor;
      if (itor == intlist.end()) cout << " (itor == intlist.end())";
      cout << endl;
   }
}

@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.17 2021-04-30 18:28:29-07 - - $
d16 1
d20 1
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.16 2021-04-30 18:28:15-07 - - $
d20 1
a20 1
   for (size_t count = 0; max_loops; ++count, ++itor) {
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.15 2021-04-29 22:00:15-07 - - $
d10 1
a10 1
   constexpr size_t max_loops = intlist.size() * 4;
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.14 2021-04-29 21:59:08-07 - - $
d10 1
d16 3
d20 3
a22 2
   for (size_t count = 0; count < intlist.size() * 4; ++count, ++itor) {
      cout << setw (2) << count << ": " << &*itor << " -> " << *itor;
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.13 2021-04-29 21:58:30-07 - - $
d9 2
a10 2
   list<string> intlist = {"hello", "world", "foo", "bar", "baz"};
   cout << "sizeof (string) = " << sizeof (string) << endl;
d12 4
a15 4
   cout << "sizeof (list<string>) = " << sizeof (list<string>) << endl;
   cout << "sizeof (list<string>::iterator) = "
        << sizeof (list<string>::iterator) << endl;
   list<string>::iterator  itor = intlist.begin();
d17 1
a17 2
      cout << setw (2) << count << ": " << &*itor << " -> \""
           << *itor << "\"";
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.12 2021-04-29 21:57:30-07 - - $
d17 2
a18 1
      cout << setw (2) << count << ": " << &*itor << " -> " << *itor;
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.11 2021-04-29 21:55:55-07 - - $
d9 2
a10 1
   list<int> intlist = {1, 2, 3, 4, 5};
d12 4
a15 4
   cout << "sizeof (list<int>) = " << sizeof (list<int>) << endl;
   cout << "sizeof (list<int>::iterator) = "
        << sizeof (list<int>::iterator) << endl;
   list<int>::iterator  itor = intlist.begin();
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.10 2021-04-29 21:55:37-07 - - $
d12 3
a14 1
   auto itor = intlist.begin();
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.9 2021-04-29 21:54:48-07 - - $
d13 1
a13 1
   for (size_t count = 0; count < intlist.size() * 3; ++count, ++itor) {
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.8 2021-04-29 21:53:44-07 - - $
d10 1
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.7 2021-04-29 21:39:52-07 - - $
d10 1
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.6 2021-04-29 21:39:01-07 - - $
d17 1
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.5 2021-04-29 21:38:40-07 - - $
d3 1
d12 1
a12 1
      cout << count << ": " << &*itor << " -> " << *itor;
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.4 2021-04-29 21:38:31-07 - - $
d10 1
a10 1
   for (size_t count = 0; count < intlist.size() * 2; ++count, ++itor) {
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.3 2021-04-29 21:37:09-07 - - $
d12 1
a12 1
      if (itor == intlist.end()) << cout << " (itor == intlist.end())";
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.2 2021-04-29 21:36:51-07 - - $
d11 3
a13 1
      cout << &*itor << " -> " << *itor << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: list-cycle.cpp,v 1.1 2021-04-29 21:36:30-07 - - $
d10 1
a10 1
   for (size_t count = 0; count < intlist.size(); ++count, ++itor) {
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d11 1
a11 1
      cout << itor << " -> " << *itor << endl;
@
