head	1.4;
access;
symbols;
locks;
comment	@// @;


1.4
date	2016.07.26.21.58.59;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.21.04.34.26;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.21.04.26.36;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.21.04.26.20;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: endian.c,v 1.4 2014-05-20 21:45:24-07 - - $

// Illustrate endianness.

#include <arpa/inet.h>
#include <stdio.h>

typedef union union32 { uint32_t num; char chr[4]; } union32;
typedef union union16 { uint16_t num; char chr[2]; } union16;

void print32 (const char *label, const union32 *val) {
   printf ("%-8s: 0x%08X =", label, val->num);
   for (int i = 0; i < 4; ++i) printf (" %02X", val->chr[i]);
   printf ("\n");
}

void print16 (const char *label, const union16 *val) {
   printf ("%-8s: 0x%04X =", label, val->num);
   for (int i = 0; i < 2; ++i) printf (" %02X", val->chr[i]);
   printf ("\n");
}

int main () {
   union union32 n32 = {0x12345678};
   print32 ("Original", &n32);
   n32.num = htonl (n32.num);
   print32 ("Network", &n32);
   n32.num = ntohl (n32.num);
   print32 ("Host", &n32);

   union union16 n16 = {0x1234};
   print16 ("Original", &n16);
   n16.num = htons (n16.num);
   print16 ("Network", &n16);
   n16.num = ntohs (n16.num);
   print16 ("Host", &n16);

   return 0;
}
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: endian.cpp,v 1.2 2014-05-20 21:26:36-07 - - $
d5 2
a6 2
#include <cstdio>
using namespace std;
d8 2
a9 1
#include <arpa/inet.h>
d11 3
a13 13
union union32 {
   uint32_t num;
   char chr[4];
};

union union16 {
   uint16_t num;
   char chr[2];
};

void print32 (const char *label, const union32& val) {
   printf ("%-8s: 0x%08X =", label, val.num);
   for (int i = 0; i < 4; ++i) printf (" %02X", val.chr[i]);
d17 3
a19 3
void print16 (const char *label, const union16& val) {
   printf ("%-8s: 0x%04X =", label, val.num);
   for (int i = 0; i < 2; ++i) printf (" %02X", val.chr[i]);
a23 1

d25 1
a25 1
   print32 ("Original", n32);
d27 1
a27 1
   print32 ("Network", n32);
d29 1
a29 1
   print32 ("Host", n32);
d32 1
a32 1
   print16 ("Original", n16);
d34 1
a34 1
   print16 ("Network", n16);
d36 1
a36 1
   print16 ("Host", n16);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: endian.cpp,v 1.1 2014-05-20 21:26:20-07 - - $
d10 22
d33 16
a48 8
   union {
      uint32_t num;
      char chr[4];
   } n32 = {0x12345678};
   union {
      uint16_t num;
      char chr[2];
   } n16 = {0x1234};
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d14 1
a14 1
   } n32 = 0x12345678;
d18 1
a18 1
   } n16 = 0x1234;
@
